function  IsShuWanGou(bh,bl)
if(bl < 1 ) then return false end
local spt = GetStartPoint(bh)
local ept = GetEndPoint(bh)
if(spt.x > ept.x or spt.y > ept.y) then
return false
end

local gnum = GetTurningPtNum(bh,3)
if(gnum < 1) then
return false
end

local tpt0 = GetTurningPt(bh,0)
local line = GetLine(spt,ept)
if(Point2LineDown(tpt0,line) == false) then
return false
end

return true
end


function  IsDian(bh,bl)
if (bl < 1) then return end

local spt = GetStartPoint(bh)
local ept = GetEndPoint(bh)

if (spt.x > ept.x or spt.y >ept.y) then 
return false
end


return true 
end


function  IsHengGou(bh,bl)
if bl < 1 then return end

local spt = GetStartPoint(bh)
local ept = GetEndPoint(bh)
if(spt.x > ept.x or spt.y > ept.y) then
return false
end

local gdnum = GetTurningPtNum(bh,2)
if (gdnum ~= 1) then 
    return false
end

local tpt = GetTurningPt(bh,0)
local slope = ( tpt.x - spt.x ) / ( tpt.y - spt.y )
local angel = math.deg ( math.atan(slope))
local angelInter
local angelFloat
angelInter,angelFloat = math.modf (angel)
if (angelFloat > 0.5) then
    angelInter = angelInter + 1
end

if (math.abs(angelInter) < 45) then 
return false
end





end


function  IsPie(bh,bl)
if ( bl < 1 ) then  return false end
local spt = GetStartPoint(bh)
local ept = GetEndPoint(bh)
if (spt.x < ept.x or spt.y >ept.y) then 
    return false
end
       
if ( bl < 2 ) then   return  end

local line = GetLine(spt,ept) 
local dis = GetFarthestPt2Line(bh,line)
if( dis < 5) then    
   return false 
end

if ( bl < 3 ) then return end
for i = 2 ,#bh.ptSet do 
    local prept = bh.ptSet[i-1]
    local curpt = bh.ptSet[i]
    if (prept.y > curpt.y ) then 
        return false     
    end
end

return true

end


function  IsZuoDian(bh,bl)
if (bl < 1) then return end

local spt = GetStartPoint(bh)
local ept = GetEndPoint(bh)

if (spt.x < ept.x or spt.y >ept.y) then 
return false
end


return true 
end


