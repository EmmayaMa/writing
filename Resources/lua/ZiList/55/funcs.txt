function  IsHengZhe2(bh,bl)
if (bl < 1) then return end
local tpt = GetTurningPtNum(bh,2)
if (tpt ~= 1) then 
return false
end

local gpt = GetTurningPt(bh,0)
local spt = GetStartPoint(bh)
local ept = GetEndPoint(bh)
local line = GetLine(spt,ept)
if (Point2LineUp(gpt,line) == false) then 
    return false
end

local slope1 = (gpt.y - spt.y) /( gpt.x - spt.x)
local angel = math.deg ( math.atan(slope1))
local angelInter
local angelFloat
angelInter,angelFloat = math.modf (angel)
if (angelFloat > 0.5) then
	angelInter = angelInter + 1
elseif (angelFloat < -0.5) then
  angelInter = angelInter - 1
end
if (angelInter <- 30 or angelInter > 10) then 
end

local slope2 = (ept.x - gpt.x) / (ept.y - gpt.y)
local angel2 = math.deg ( math.atan(slope2))
local angelInter2
local angelFloat2 
angelInter2,angelFloat2 = math.modf (angel2)
if (angelFloat2 > 0.5) then
    angelInter2 = angelInter2 + 1
elseif (angelFloat2 < -0.5) then
    angelInter2 = angelInter2 - 1
end
if(angelInter2 > 10 or angelInter2 < -40) then 
   return false
end

return true

end


function  IsHeng(bh,bl)
if (bl < 1) then return end
    local startpt = GetStartPoint(bh)
    local endpt = GetEndPoint(bh)
    if(startpt.x > endpt.x) then    
       return false
    end
   
    local slope = (startpt.y - endpt.y) / (endpt.x - startpt.x)
    local angel = math.deg ( math.atan(slope))   
    local angelInter
    local angelFloat
    angelInter,angelFloat = math.modf (angel)
    if (angelFloat > 0.5) then
    angelInter = angelInter + 1
    end
    
    if (math.abs (angelInter )>= 25) then      
        return false
    end
   
    local line = GetLine(startpt,endpt) 
    local dis = GetFarthestPt2Line(bh,line)  
     
    if( dis > 10) then 
        return false 
    end
    if (bl < 2) then return end    
    if(math.abs(angelInter) >= 15) then 
        return false
    end
    return true

end


function  IsXieShu(bh,bl)
if (bl < 1) then return end
local startpt = bh.ptSet[1]
local endpt = bh.ptSet[#bh.ptSet]
if( endpt.y < startpt.y ) then 
    return false
end
local slope = ( endpt.x - startpt.x ) / ( endpt.y - startpt.y )
local angel = math.deg ( math.atan(slope))
local angelInter
local angelFloat
angelInter,angelFloat = math.modf (angel)
if (angelFloat > 0.5) then
    angelInter = angelInter + 1
end

if(angelInter > 20 or angelInter< -45) then
   return false
end

if (bl < 2) then return end 
local line = GetLine(startpt,endpt) 
local dis = GetFarthestPt2Line(bh,line)
if( dis > 10) then 
   return false 
end

if (math.abs (angelInter )>= 10) then 
    return false
end


if (bl < 3) then return end

if (dis > 5) then return  false end

for i = 2, #bh.ptSet-3 do 
    local prept = bh.ptSet[i-1]
    local curpt = bh.ptSet[i]
    if (prept.y > curpt.y) then 
        return false
    end
end
return true

end


